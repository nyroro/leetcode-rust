
impl Solution {
    pub fn day_of_year(date: String) -> i32 {
        let vec: Vec<&str> = date.split("-").collect();
        let year: i32 = vec[0].parse().unwrap();
        let month = vec[1];
        let day: i32 = vec[2].parse().unwrap();
        
        match month {
            "01" => day,
            "02" => day + 31,
            _ => {
                if (year % 4 == 0 && year % 100 != 0) || (year % 400 == 0) {
                    match month {
                        "03" => day + 31 + 29,
                        "04" => day + 31 + 29 + 31,
                        "05" => day + 31 + 29 + 31 + 30,
                        "06" => day + 31 + 29 + 31 + 30 + 31,
                        "07" => day + 31 + 29 + 31 + 30 + 31 + 30,
                        "08" => day + 31 + 29 + 31 + 30 + 31 + 30 + 31,
                        "09" => day + 31 + 29 + 31 + 30 + 31 + 30 + 31 + 31,
                        "10" => day + 31 + 29 + 31 + 30 + 31 + 30 + 31 + 31 + 30,
                        "11" => day + 31 + 29 + 31 + 30 + 31 + 30 + 31 + 31 + 30 + 31,
                        "12" => day + 31 + 29 + 31 + 30 + 31 + 30 + 31 + 31 + 30 + 31 + 30,
                        _ => panic!("Invalid month"),
                    }
                } else {
                    match month {
                        "03" => day + 31 + 28,
                        "04" => day + 31 + 28 + 31,
                        "05" => day + 31 + 28 + 31 + 30,
                        "06" => day + 31 + 28 + 31 + 30 + 31,
                        "07" => day + 31 + 28 + 31 + 30 + 31 + 30,
                        "08" => day + 31 + 28 + 31 + 30 + 31 + 30 + 31,
                        "09" => day + 31 + 28 + 31 + 30 + 31 + 30 + 31 + 31,
                        "10" => day + 31 + 28 + 31 + 30 + 31 + 30 + 31 + 31 + 30,
                        "11" => day + 31 + 28 + 31 + 30 + 31 + 30 + 31 + 31 + 30 + 31,
                        "12" => day + 31 + 28 + 31 + 30 + 31 + 30 + 31 + 31 + 30 + 31 + 30,
                        _ => panic!("Invalid month"),
                    }
                }
            }
        }
    }
}
